<div>
    @if (EUValue == -1 || (Minutes() > 30 && EUValue < 1))
    {
        <p>N/A</p>
    }
    else
    {
        @if (isEU)
        {
            <p class="@(IsOutOfThreshold ? "unStable" : "stable")">@String.Format(CultureInfo.InvariantCulture, "{0:0.0}", EUValue)</p>
        }
        else
        {
            <p class="@(IsOutOfThreshold ? "unStable" : "stable")">@String.Format(CultureInfo.InvariantCulture, "{0:0}", FromEU(EUValue))</p>
        }
    }
</div>
@code {
    [Parameter] public bool isEU { get; set; }
    [Parameter] public float EUValue { get; set; }
    [Parameter] public bool IsOutOfThreshold { get; set; }
    [Parameter] public DateTime LastRecieved { get; set; }

    private int Minutes () {
        var diff = DateTime.Now - LastRecieved;
        var minutes = diff.Minutes + diff.Hours * 60 + diff.Days * 1440;
        return minutes;
    }

    private float FromEU(float v)
    {
        return v * 18;
    }
}

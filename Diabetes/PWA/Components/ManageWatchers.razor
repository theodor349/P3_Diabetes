@inject HttpClient Http;
@inject INetworkHelper Network;

<div class="connectionMananger">
    <div class="manageWatcherTitle">
        <h4>Manage Connections</h4>
    </div>

    <div class="scrollbar" style="height: 430px;">
        @foreach (var user in UserPermissions)
        {
            <WatcherUserPermissions Update="GetPermissions" Permissions="user.Value" Name="@user.Key"></WatcherUserPermissions>
        }
    </div>
</div>

@code {
    private Dictionary<string, List<Permission>> UserPermissions = new Dictionary<string, List<Permission>>();
    private List<Permission> permissions = new List<Permission>();

    protected override async Task OnInitializedAsync()
    {
        await GetPermissions();
    }

    private async Task GetPermissions()
    {
        UserPermissions = new Dictionary<string, List<Permission>>();
        permissions = await Network.GetPermissions();
        SortPermissions(permissions);
    }

    private void SortPermissions(List<Permission> permissions)
    {
        foreach (var p in permissions)
        {
            if (!UserPermissions.ContainsKey(p.GetName()))
            {
                UserPermissions.Add(p.GetName(), new List<Permission>() { p });
            }
            else
            {
                UserPermissions[p.GetName()].Add(p);
            }
        }
    }
}
